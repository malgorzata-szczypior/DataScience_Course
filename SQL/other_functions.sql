/*We need to make some changes to the data about our employees, but before applying the changes we need to see the data as it will be after the changes. Please write a query to list employees data with the following changes:

The names of all of the employees must be stored with the first letter of each name in uppercase, and the rest of the name in lowercase.

The e-mail addresses are incorrect. All of them must be modified to add “@gmail.com” to the string they currently have, but the current value must be changed to lowercase.

Phone numbers have dots, but we want them replaced by hyphens.

· We need a new column called “CODE” which will be generated by extracting the part of the name that appears before the first blank space, and then removing all vowels from it, so, for an employee called ‘CARLOS’, the code would be ‘CRLS’. */

select 
initcap(name) as name,
birthdate,
replace(phone,'.','-') as phone,
salary,
department_id,
hire_date,
job_id,
lower(email) || '@gamil.com' as email,
bonus,
Translate(Substr(name,1,instr(name,' ')-1),'XAEIOU','X') As code
from employee;

/*Write a query to generate a list of employees following these requirements:

We don’t need the complete phone number. In this report, we only want the numbers that are between the first and second dots, for example, for a number like this 515.123.4567 the report must display ‘123’ only.

Please don’t include employees hired before 2010.

The report must be ordered by salary, in descending order.*/
SELECT  Id,
  name,
  Birthdate,
  Phone,
  SUBSTR(phone,INSTR(phone,'.')+1,INSTR(phone,'.',1,2)-INSTR(phone,'.')-1) As Phone_segment,
  Salary,
  Department_Id,
  Hire_Date,
  Job_Id,
  Email,
  bonus
From Employee
WHERE hire_date >= date '2010-01-01'
ORDER BY salary DESC;

/*Write the query needed to generate a report with the following characteristics. For this task assume that a month has 30 days:

The report must include the names, job_id, salary, daily salary, and the result of applying the round, trunc, ceil and floor functions to the daily salary calculation.

The report must include only employees whose daily salary is an integer and either were hired after 2010 or work for the ‘IT’ department.*/
with d as(
select name, job_id, salary,
salary/30 as daily_sal
from employee
where hire_date > '31-DEC-2010'
or department_id = (select id from department where lower(name) like '%information%'))
select d.*,
round(daily_sal),
trunc(daily_sal),
ceil(daily_sal),
floor(daily_sal)
from d
where daily_sal=trunc(daily_sal);

/*Write the query necessary to generate the report with the following characteristics:

The report must include the employee id, name, and hire date.

It must include a column that tells us for how many months the employee has worked for the company.

Every employee receives a raise after 6 months of working for the company. Include a column that tells us the date in which they earned the right for the mentioned raise.

Every employee is sent to a short induction the next Monday after they are hired. Include a column that tells us the date in which they attended their induction.

Every employee is subscribed to the company’s monthly newsletter on the first day of the next month after they are hired. Add a column that tells us the date in which they were subscribed to the newsletter.

Do not include employees from the IT department.*/

select id, name, hire_date ,
trunc(months_between(sysdate, hire_date)) as months_worked,
add_months(hire_date,6) as raised_date,
next_day(hire_date,'monday') as introduction_date,
trunc(add_months(hire_date,1),'month') as neswletter_date
from employee
where department_id != (select id from department where lower(name) like '%information%')

/*
The company wants to give a rise to all employees according to these conditions:

Employees who work in the ACCOUNTING department get a 10% increase to their salary.

Employees who work in the MARKETING department get a 15% increase to their salary.

Employees from the other departments get a 20% increase to their salary.

Please generate a report that includes the employee id, name, current salary, and new salary. Please generate 2 columns for the new salary. To calculate the first one use the DECODE function and for the second one use a simple CASE expression. The result in both new salary columns must be the same. */

select id, name, salary , decode(department_id, 1, salary*1.1, 2, salary*1.15, salary*1.2) as new_salary,
(salary *
case department_id
when 1 then 1.1
when 2 then 1.15
else 1.2
end) as salary_case
from employee

/*The company is planning to assign a classification to each employee based on the salary they earn. The classification would be as follows:

Employees who earn less than 2500 will be classified as “A”.

Employees who earn 2500 or more but less than 4000 will be classified as “B”.

Employees who earn 4000 or more will be classified as “C” if they were hired before 2014 and will be classified as “D” if they were hired in 2014 or 2015.

Please generate a report that includes the employee id, name, salary, the year they were hired, and the classification of each employee, but don’t include employees from the MARKETING department, and also don’t include employees who don’t have a phone number registered. The report must be ordered by salary and hire_date.
*/
select id, name, salary, hire_date,
case 
when salary < 2500 then 'A'
when salary >= 2500 and salary < 4000 then 'B'
when salary >= 4000 and hire_date < '01-JAN-2014' then 'C'
when salary >= 4000 and to_char(hire_date,'YYYY') in (2014, 2015) then 'D'
end as code
from employee
where department_id !=2 and phone is not null
order by 3,4;

/*Write an employees report with the following columns:

Id

Name

Date of their second birthday (don’t use functions to calculate this date, and assume that all years have 365 days (ignore the possibility of leap years), so the result will actually be an approximation of the second birthday date.)

How old they were when they were hired. Their age must be expressed in hours (not years).

Please include only employees who were hired in 1980 or later and whose phone number starts with “1”. Order results by department id (ascending) and salary (descending).
*/
select id, name,
birthdate + 365 as nd_birthdate,
(hire_date-birthdate) * 24 as hours
from employee
where hire_date > '01-JAN-1980'
and phone like '1%'
order by department_id asc, salary desc;
